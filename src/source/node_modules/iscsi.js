/**
 * iScSi管理类
 **/
var spawn = require('child_process').spawn;
var exec = require('child_process').exec;
var SystemInfo = require('system').SystemInfo;
var _system = new SystemInfo();
var fs = require('fs');

var _isSystemAvailable = function() {
  return _system.getLocalSystem() === 'win32';
};

var _selectIpAddr = function(ip_addrs) {
  if (ip_addrs === undefined || ip_addrs.length === 0)
    throw new ReferenceError("ip_addrs isn's valid");
  var regexp = /^\d{1,3}\.\d{1,3}\.\d{1,3}/;
  var local_addrs = _system.getNetList();
  for (var i = 0; i < local_addrs.length; i += 1) {
    var local_addrs_prefix = (local_addrs[i].address.match(regexp))[0];
    for (var j = 0; j < ip_addrs.length; j += 1) {
      var ip_addr_prefix = ip_addrs[j].match(regexp)[0];
      if (ip_addr_prefix === local_addrs_prefix)
        return ip_addrs[j];
    }
  }
  throw new RangeError('No valid ip address');
};

var _getTarget = function(initr) {
  var target = initr.replace(/initiator/, 'target');
  return target;
};

var init = function(initr, ip_addrs) {
  if (_isSystemAvailable()) {
    try {
      var target = _getTarget(initr);
      var cmd = spawn('cmd.exe');
      cmd.stdin.write('sc config msiscsi start= auto' + '\n');
      cmd.stdin.write('net start msiscsi'+ '\n');
      cmd.stdin.write('iscsicli NodeName ' + initr + '\n');
      cmd.stdin.write('iscsicli QAddTargetPortal '+ ip_addrs +'\n');
      var reg = new RegExp( "^    " + target + "(\\S{2})$" , "gim");
      for (var j = 0; j < 40; j += 1) {last = exec('iscsicli ListTargets');}
      last.stdout.on('data', function (data) {
        var res = data.match(reg);
        cmd.stdin.write('iscsicli QloginTarget '+ res + '\n');
        cmd.stdin.write('iscsicli QloginTarget '+ res + '\n');
      });
    } catch (err) {
      throw err;
    }
  } else {
    throw new Error('Unavailable system');
  }
};

var linkinit = function(initr, ip_addrs) {
    try {
      var target = _getTarget(initr);
      var cmd = spawn('cmd.exe');
      cmd.stdin.write("reg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\" /v \"c:\\windows\\system32\\cmd.exe\" /d \"RUNASADMIN\" /f" + '\n');
      cmd.stdin.write('sc config msiscsi start= auto' + '\n');
      cmd.stdin.write('net start msiscsi'+ '\n');
      cmd.stdin.write('iscsicli NodeName ' + initr + '\n');
      cmd.stdin.write('iscsicli QAddTargetPortal '+ ip_addrs +'\n');
    } catch (err) {
      throw err;
    }
};

var disinit = function(initr, ip_addrs) {
  if (_isSystemAvailable()) {
    try {
        var target = _getTarget(initr);
        var cmd = spawn('cmd.exe');
        for (var j = 0; j < 40; j += 1) {lasts = exec('iscsicli ReportTargetMappings');}
            lasts.stdout.on('data', function (data) {
            var rega = /\w{16}\-\w{16}/gim;
            var regb = /iqn.2013-01.net.zbx.target:(\S+)/gim;
            var regc = new RegExp( target + "(\\S+)","gim");
            var resa = data.match(rega);
            var resb = data.match(regb);
            for (var i in resb) {
                if (regc.test(resb[i])){
                    cmd.stdin.write('iscsicli LogoutTarget '+ resa[i]+ '\n');
                    cmd.stdin.write('iscsicli LogoutTarget '+ resa[i]+ '\n');
            }
        }
         });
        } catch (err) {
          throw err;
    }
       }
};

exports.linkinit = linkinit;
exports.disinit = disinit;
exports.init = init;